CC = @CC@

SSLINC=@OPENSSL_INCLUDES@
SSLLIB=@OPENSSL_LIBS@
SSLLDFLAGS=@OPENSSL_LDFLAGS@

LIBS = @LIBS@ $(SSLLIB)

LIBDIR =
INCDIR = -I../.. -I../../include $(SSLINC)

CFLAGS = @CFLAGS@
LDFLAGS = @LDFLAGS@ $(SSLLDFLAGS)

STATIC = crsv
SHARED = -shared
FPIC = -fPIC

PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_VERSION = @PACKAGE_VERSION@

#SOLIBNAME = lib$(PACKAGE_NAME).so.$(PACKAGE_VERSION)
SOLIBNAME = lib$(PACKAGE_NAME).so
ALIBNAME  = lib$(PACKAGE_NAME).a

LIBTYPE = @LIBTYPE@

TARGET = ec_lib.o hash.o

OBJSBN   = bn254_fp.o
OBJSBN  += bn254_fp2.o
OBJSBN  += bn254_fp6.o
OBJSBN  += bn254_fp12.o
OBJSBN  += ec_bn254_fp.o
OBJSBN  += ec_bn254_fp2.o
OBJSBN  += ec_bn254_pairing.o
OBJSBN  += ec_bn254_lib.o
OBJSBLS  = bls509_fp.o
OBJSBLS += bls509_fp2.o
OBJSBLS += bls509_fp4.o
OBJSBLS += ec_bls509_fp.o
OBJSBLS += ec_bls509_lib.o

all: $(TARGET)
	@echo compiling the ec_bn254 and ec_bls509
	make -C ec_bn254/
	make -C ec_bls509/
ifeq ($(LIBTYPE), static)
	make static
else
ifeq ($(LIBTYPE), shared)
	make shared
endif
endif

%.o: %.c
	$(CC) $(FPIC) $(CFLAGS) -c $< $(INCDIR)

static:
	@echo creating static library.
	ar $(STATIC) $(ALIBNAME) $(TARGET) $(OBJSBN:%.o=ec_bn254/%.o) $(OBJSBLS:%.o=ec_bls509/%.o)

shared:
	@echo creating shared library.
	$(CC) $(SHARED) $(LDFLAGS) -o $(SOLIBNAME) $(TARGET) $(OBJSBN:%.o=ec_bn254/%.o) $(OBJSBLS:%.o=ec_bls509/%.o) $(LIBS)

check:
	@echo test library.
	make check -C ec_bn254/
	make check -C ec_bls509/

.PHONY: clean
clean:
	$(RM) *~ $(TARGET) $(SOLIBNAME) $(ALIBNAME)
	make clean -C ec_bn254/
	make clean -C ec_bls509/
